#####################################################################################################
#																									#
#	Module:																							#
#		VQM_ITMS.db																				#
#																									#
#	Description:																					#
#		Defines the IOC records that are used by the VQM_ITMSApp.								#
#																									#
#	Author:  Peter Heesterman (Tessella plc). Date: 05 Jan 2015.									#
#	Written for CCFE (Culham Centre for Fusion Energy).												#
#																									#
#	VQM_ITMS is distributed subject to a Software License Agreement								#
#	found in file LICENSE that is included with this distribution.									#
#																									#
#####################################################################################################

record(mbbo, "$(P)Scanning")
{
	field(DESC, "Scanning")
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)SCANNING")
	info("asyn:READBACK", "1")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
	field(FVVL, "5")
	field(SXVL, "6")
    field(ZRST, "OFF")
    field(ONST, "STANDBY")
    field(TWST, "ON")
    field(THST, "SCAN")
    field(FRST, "EXTTRIG")
    field(FRST, "EXTTRIGOFF")
	field(FRST, "CALIBRATE")
	info("asyn:READBACK", "1")
}

record(longout, "$(P)Averages")
{
    field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)AVERAGES")
	info("asyn:READBACK", "1")
}

record(mbbo, "$(P)AverageMode")
{
    field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)AVERAGEMODE")
	field(ZRVL, "0")
	field(ONVL, "1")
	field(TWVL, "2")
    field(THVL, "3")
    field(ZRST, "OFF")
    field(ONST, "Running_Avg")
    field(TWST, "Cumulative_Moving_Avg")
    field(THST, "Accumulator")
	info("asyn:READBACK", "1")
}

record(longin, "$(P)LastScanNumber")
{
    field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),1)LASTSCANNUMBER")
	field(SCAN, "I/O Intr")
}

record(ao, "$(P)Emission")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)EMISSION")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)FilamentBias")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)FILAMENTBIAS")
	info("asyn:READBACK", "1")
}

record(ai, "$(P)FilamentPower")
{
	field(DTYP, "asynFloat64")
	field(INP,  "@asyn($(PORT),$(ADDR),1)FILAMENTPOWER")
	field(SCAN, "I/O Intr")
}

record(ao, "$(P)RepellerBias")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)REPELLERBIAS")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)EntryPlate")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)ENTRYPLATE")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)PressurePlate")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)PRESSUREPLATE")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)Cups")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)CUPS")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)Transition")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)TRANSITION")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)ExitPlate")
{
	field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)EXITPLATE")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)EMShield")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)EMSHIELD")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)EMBias")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)EMBIAS")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)RFAmp")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)RFAMP")
	info("asyn:READBACK", "1")
}

record(ai, "$(P)MassCal")
{
    field(DTYP, "asynFloat64")
	field(INP,  "@asyn($(PORT),$(ADDR),1)MASSCAL")
	field(SCAN, "I/O Intr")
}

record(ao, "$(P)ElectrometerGain")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)ELECTROMETERGAIN")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)MassFrom")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)MASSFROM")
	info("asyn:READBACK", "1")
}

record(ao, "$(P)MassTo")
{
    field(DTYP, "asynFloat64")
	field(OUT,  "@asyn($(PORT),$(ADDR),1)MASSTO")
	info("asyn:READBACK", "1")
}

record(waveform, "$(P)RawData")
{
    field(DTYP, "asynFloat32ArrayIn")
    field(FTVL, "FLOAT")
	field(INP,  "@asyn($(PORT),$(ADDR),1)RAWDATA")
    field(NELM, "7233")
	field(PINI, "1")
	field(SCAN, "I/O Intr")
}

record(waveform, "$(P)PartialPressure")
{
    field(DTYP, "asynFloat32ArrayIn")
    field(FTVL, "FLOAT")
	field(INP,  "@asyn($(PORT),$(ADDR),1)PARTIALPRESSURE")
    field(NELM, "300")
	field(PINI, "1")
	field(SCAN, "I/O Intr")
}

record(ai, "$(P)TotalPressure")
{
    field(DTYP, "asynFloat64")
	field(INP,  "@asyn($(PORT),$(ADDR),1)TOTALPRESSURE")
	field(SCAN, "I/O Intr")
}

record(longin, "$(P)Fault")
{
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PORT),$(ADDR),1)FAULT")
	field(SCAN, "I/O Intr")
}

record(stringin, "$(P)MachineID")
{
	field(DTYP, "asynOctetRead")
	field(INP,  "@asyn($(PORT),$(ADDR),1)MACHINEID")
	field(SCAN, "I/O Intr")
}

record(stringin, "$(P)FirmwareVersion")
{
	field(DTYP, "asynOctetRead")
	field(INP,  "@asyn($(PORT),$(ADDR),1)FIRMWAREVERSION")
	field(SCAN, "I/O Intr")
}

record(stringin, "$(P)HardwareVersion")
{
	field(DTYP, "asynOctetRead")
	field(INP,  "@asyn($(PORT),$(ADDR),1)HARDWAREVERSION")
	field(SCAN, "I/O Intr")
}
