#
# Contains some house-keeping general record definitions for a specific port
# 
# params:
# DAQMX - this is inserted before every record name
# PORT - port name to connect to (also inserted in record name)
# CHAN - Channel number to connect to (also inserted in record name
#
# Need some work -Heinrich 
# 

record(bo, "$(DAQMX):$(PORT)$(CHAN):Active") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "asynUInt32Digital")
  field(OUT, "@asynMask($(PORT),$(CHAN)) ACQUIRE")
  field(ZNAM, "stop")
  field(ONAM, "run")
}

record(bi, "$(DAQMX):$(PORT)$(CHAN):GET_ACQUIRE") {
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "asynUInt32Digital")
  field(INP, "@asynMask($(PORT),$(CHAN))ACQUIRE")
  field(ZNAM, "stop")
  field(ONAM, "run")
}

record(ao, "$(DAQMX):$(PORT)$(CHAN):SET_RATE") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "asynFloat64")
  field(FLNK, "$(DAQMX):GET_RATE")
  field(VAL, "10000")
  field(OUT, "@asyn($(PORT),$(CHAN))SAMPLERATE")
  field(PREC, "1")
}

record(ai, "$(DAQMX):$(PORT)$(CHAN):GET_RATE") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),$(CHAN))SAMPLERATE")
}

record(ai, "$(DAQMX):$(PORT)$(CHAN):GET_MINV") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),$(CHAN))MIN_VOLT")
}

record(ai, "$(DAQMX):$(PORT)$(CHAN):GET_MAXV") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),$(CHAN))MAX_VOLT")
}

# asy
record(ai, "$(DAQMX):$(PORT)$(CHAN):DTIME") {
  field(SCAN, "I/O Intr")
  field(PINI, "NO")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),$(CHAN))D_TIME")
  field(PREC, "3")
  field(LINR, "LINEAR")
  field(ESLO, "0.000001")
  field(EVNT, "1")
}

record(ao, "$(DAQMX):$(PORT)$(CHAN):SET_NSAMPLES") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "asynInt32")
  field(FLNK, "$(DAQMX):GET_NSAMPLES")
  field(VAL, "1000")
  field(OUT, "@asyn($(PORT),$(CHAN))NSAMPLES")
  field(PREC, "0")
}

record(ai, "$(DAQMX):$(PORT)$(CHAN):GET_NSAMPLES") {
  field(SCAN, "Passive")
  field(PINI, "YES")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),$(CHAN))NSAMPLES")
}



record(bo, "$(DAQMX):$(PORT)$(CHAN):TRIGMODE") {
  field(SCAN, "Passive")
  field(PINI, "NO")
  field(DTYP, "asynUInt32Digital")
  field(OUT, "@asynMask(myport1 0 0x01)TRIGGERMODE")
  field(ZNAM, "continuous")
  field(ONAM, "oneshot")
}


record(mbbi, "$(DAQMX):$(PORT)$(CHAN):STATE") {
  field(SCAN, "I/O Intr")
  field(PINI, "YES")
  field(DTYP, "asynUInt32Digital")
  field(INP, "@asynMask(myport1 0 0xFF)STATE")
  field(ZRST, "unconfigured")
  field(ONST, "reconfigure")
  field(TWST, "configure")
  field(THST, "idle")
  field(FRST, "start")
  field(FVST, "busywait")
  field(SXST, "acquire Analog")
  field(SVST, "acquire Digital")
  field(EIST, "write")
  field(NIST, "stop")
  field(ZRVL, "0")
  field(ONVL, "1")
  field(TWVL, "2")
  field(THVL, "3")
  field(FRVL, "4")
  field(FVVL, "5")
  field(SXVL, "6")
  field(SVVL, "7")
  field(EIVL, "8")
  field(NIVL, "9")
}

